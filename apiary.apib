FORMAT: 1A
HOST: http://evented.apiary-mock.com

# Evented
Events from around the Dayton region aggregated

## Key Resources
* **Events**: Events that are occuring
* **Sources**: Sources (on the web) of events which are ingested into the system.

# Group Events
Events that are happening. This resource is *READ-ONLY*.

## GET /events?{complete,q,start,limit,order}
Returns a collection of events matching specified criteria
+ Parameters
    + complete = `false` (optional, string) ... True if complete events should be included in the results, false otherwise.
        +Values
            + `true`
            + `false`
    + q (optional, string) ... A free-text string
    + start=`1` (optional, number) ... Starting index
    + limit=`20` (optional, number) ... Number of items to return. ***Maximum value is 200***
    + order=`asc` (optional, text) ... Sort order of collection response

        + Values
            + `asc`
            + `desc`
+ Response 200 (application/json)

        [
            {
            "id":0,
            "source_url":"http://events.foo.org",
            "title":"Really Cool Event",
            "description": "This is the best event ever. There is prizes, ponies and water guns!",
            "location":"711 e monument ave, Dayton, OH 45402",
            "start":"2011-10-11T13:00:00",
            "end":"2011-10-12T15:00:00",
            },
            {
            "id":1,
            "source_url":"http://events.foo.org",
            "title":"Even Better Event2",
            "description": "This is the best event ever.",
            "location":"711 e monument ave, Dayton, OH 45402",
            "start":"2011-10-12T13:00:00",
            "end":"2011-10-12T15:00:00",
            },
            {
            "id":2,
            "source_url":"http://events.foo.org",
            "title":"Mega Cool Event",
            "description": "Some cool stuff going on here!",
            "location":"711 e monument ave, Dayton, OH 45402",
            "start":"2011-10-13T13:00:00",
            "end":"2011-10-13T15:00:00",
            }
        
        ]

## GET /event/{id}
Find an event by id
+ Parameter
    + id (required, number) ... the unique identifier of the event
+ Response 200 (application/hal+json)
    
            {
            "id":2,
            "source_url":"http://events.foo.org",
            "title":"Mega Cool Event",
            "description": "Some cool stuff going on here!",
            "location":"711 e monument ave, Dayton, OH 45402",
            "start":"2011-10-13T13:00:00",
            "end":"2011-10-13T15:00:00",
            }

# Group Sources
Sources being included for aggregation. This resource is *READ-ONLY*.

## GET /sources?{start,limit}
A collection of sources
+ Parameter
    + start=`1` (optional, number) ... Starting index
    + limit=`20` (optional, number) ... Number of items to return. ***Maximum value is 200***
    
+ Response 200 (application/json)

        [
        {"source_url":"http://events.foo.org",
        "id":12,
        "bio":"This group event "
        "contact":{
            "name":"jimbo",
            "email":"jimbo@foo.org"
        },
        "tags":[ "tag1", "tag2", "tag3"
        ]    
        },
        {"source_url":"http://events.bar.org",
        "id":13,
        "bio":"This group event"
        "contact":{
            "name":"janebo",
            "email":"janebo@bar.org"
        },
        "tags":[ "tag1", "tag2", "tag3"
        ]    
        }
        ]

## GET /sources/{id}
An individual source.
+ Parameter
    + id (required, number) ... The unique source id
+ Response 200 (application/hal+json)

        {"source_url":"http://events.foo.org",
        "id":12,
        "bio":"This group event "
        "contact":{
            "name":"jimbo",
            "email":"jimbo@foo.org"
        },
        "tags":[ "tag1", "tag2", "tag3"
        ]    
        }